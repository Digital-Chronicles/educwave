# Generated by Django 5.1.4 on 2025-02-13 21:45

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_name', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'application_setting',
                'db_table_comment': 'This includes settings data',
            },
        ),
        migrations.CreateModel(
            name='CertificateAward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('awarded_by', models.CharField(max_length=255)),
                ('date_awarded', models.DateField()),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'certificate_award',
                'db_table_comment': 'This includes certificate_awards about the school',
            },
        ),
        migrations.CreateModel(
            name='GeneralInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=255, unique=True)),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?\\d{7,15}$', message='Enter a valid phone number.')])),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('established_year', models.PositiveIntegerField()),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'general_information',
                'db_table_comment': 'This includes general information about the school',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_date', models.DateField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'lesson',
                'db_table_comment': 'This includes exams data',
            },
        ),
        migrations.CreateModel(
            name='Ranking_Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=5)),
                ('min_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'ranking_grade',
                'db_table_comment': 'This includes grade information about the school',
            },
        ),
        migrations.CreateModel(
            name='SchedulingSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_name', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'scheduling_setting',
                'db_table_comment': 'This includes scheduling setting about the school',
            },
        ),
        migrations.CreateModel(
            name='TransactionSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_name', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'transaction_setting',
                'db_table_comment': 'This includes transaction setting about the school',
            },
        ),
    ]
